<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>
<script type="text/javascript" src="/resources/js/jquery-3.6.0.js"></script>
<div class="col-12">
	<div class="card card-primary">
		<div class="card-header">
			<!-- 도서 선택 시작 -->
			<!-- ajax를 통해 append
				<option value="1">검은개똥이</option>
			 -->
			<select class="custom-select">
	            <option value="1">검은개똥이</option>
	            <option value="2">근수저</option>
	            <option value="3">호빗</option>
	            <option value="4">반지의 제왕</option>
	            <option value="5">운수 좋은 날</option>
         	</select>
			<!-- 도서 선택 끝 -->
		</div>
		<div class="card-body">
			<div class="row">
				<!--
				1. button으로 띄우기 
				<button type="button" class="btn btn-default"
				data-toggle="modal" data-target="#modal-default">
				Launch Default Modal
				</button>
				
				2. a 태그로 띄우기
				<a data-toggle="modal" href="#modal-default">Open Modal</a>
				
				3. 기타 요소로 띄우기
				<p data-toggle="modal" data-target="#modal-default">Open Modal</a>
				 -->
				<!-- bookVO -> attachVOList 멤버변수 -> List<AttachVO> -->
				<c:forEach var="attachVO" items="${bookVO.attachVOList}">
				<div class="col-sm-2">
					<a class="btn btn-modal"
						data-toggle="modal" href="#modal-default"
						data-id="/resources/upload${attachVO.filename}"
						data-title="${bookVO.title}"
						data-userno="${bookVO.bookId}"
						data-seq="${attachVO.seq}"> <img
						src="/resources/upload${attachVO.filename}"
						class="img-fluid mb-2" alt="white sample">
					</a>
				</div>
				</c:forEach>
			</div>
		</div>
	</div>
</div>
<!-- Default Modal 시작 -->
<div class="modal fade" id="modal-default" style="display: none;"
	aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h4 class="modal-title">이것이 톰캣이유~</h4>
				<input type="text" id="txtUserNo" value="" />
				<input type="text" id="txtSeq" value="" />
				<button type="button" class="close" data-dismiss="modal"
					aria-label="Close">
					<span aria-hidden="true">×</span>
				</button>
			</div>
			<div class="modal-body">
				<p id="body-content"></p>
			</div>
			<div class="modal-footer justify-content-between">
				<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
				<div style="float:right;">
					<!-- 일반 모드 시작 -->
					<span id="spn1">
						<button type="button" id="edit" class="btn btn-primary">수정</button>
						<button type="button" id="delete" class="btn btn-danger">삭제</button>
					</span>
					<!-- 일반 모드 끝 -->
					<!-- 수정 모드 시작 -->
					<span id="spn2" style="display:none;">
						<div class="input-group justify-content-between">
								<div class="custom-file" style="float:left;">
									<input type="file" class="custom-file-input"
									 id="uploadFile" name="uploadFile" style="width:200px;" />
									<label class="custom-file-label" for="exampleInputFile">Choose file</label>
								</div>
							<div style="float:rigth;">
								<button type="button" id="uploadBtn" class="btn btn-success">확인</button>
								<button type="button" id="cancel" class="btn btn-warning">취소</button>
							</div>
						</div>
					</span>
					<!-- 수정 모드 끝 -->
				</div>
			</div>
		</div>
	</div>
</div>
<!-- Default Modal 끝 -->
<script type="text/javascript">
	$(function() {
		//data-id="..........."
		$(".btn-modal").click(
				function() {
					//data-id="....."
					let data = $(this).data("id");
					//data-title="....."
					let title = $(this).data("title");
					//userId랑 seq는 ATTACH 테이블의 복합키(composite key)로써의 기본키(primary key, 식별키)
					//data-userNo="....."
					let userNo = $(this).data("userno");
					//data-seq="....."
					let seq = $(this).data("seq");
					
					console.log("data : " + data, ", title : " + title
								+ ", userNo : " + userNo + ", seq : " + seq);

					$("#body-content").html(
							"<img src='" + data + "' style='width:100%;' />");
					//modal은 하나이고, modal-title 클래스 또한 하나이다
					$(".modal-title").text(title);
					$("#txtUserNo").val(userNo);
					$("#txtSeq").val(seq);
				});
		//el 정보를 j/s 변수에 담는다
		let currentBookId = "${param.bookId}";
		let sel = "";

		$.ajax({
			url : "/gallery/bookList",
			dataType : "json",
			type : "get",
			success : function(data) {
				//data : list<BookVO>
				//console.log("data : " + JSON.stringify(data))
				//item : BookVO
				$.each(data, function(index, item) {
					console.log("item.bookId : " + item.bookId);
					console.log("item.title : " + item.title);
					
					if(item.bookId == currentBookId) {
						sel = "selected='selected'"
					} else {
						sel = "";
					}
					//option항목 추가
					$(".custom-select").append("<option value='"+
							item.bookId+"' "+sel+">"+
							item.title+"</option>");
				});
			}
		});
		
		//custom-select가 바뀌면 이미지 목록을 다시 가져온다
		$(".custom-select").on("change",function() {
			//선택된 option의 value를 가져오자
			let bookId = $(this).val();
			console.log("bookId : " + bookId);
			
			location.href="/gallery/list?bookId="+bookId;
		});
	});
</script>
<script type="text/javascript">
	$(function() {
		//수정버튼 클릭 -> 수정모드로 전환
		$("#edit").on("click", function() {
			//일반모드
			$("#spn1").css("display", "none");
			//수정모드
			$("#spn2").css("display", "block");
		});
		
		//취소버튼
		$("#cancel").on("click",function() {
			//일반모드
			$("#spn1").css("display", "block");
			//수정모드
			$("#spn2").css("display", "none");
		});
		
		//ajax 시작
		//이미지 체킹
		let regex = new RegExp("(.*?)\.(exe|sh|zip|alz)$"); //정규식
		let maxSize = 5242880; //5MB
		
		function checkExtension(fileName, fileSize) { //확장자, 크기 체킹
			if(fileSize >= maxSize) {
				alert("파일 사이즈가 초과되었습니다");
				//함수 종료
				return false;
			}
			//fileName : 개똥이.zip
			if(regex.test(fileName)) {
				alert("해당 종류의 파일은 업로드할 수 없습니다.")
				return false;
			}
			return true;
		}
		
		$("#uploadBtn").on("click",function(e) {
			//가상의 form 태그 생성
			let formData = new FormData();
			let inputFile = $("input[name='uploadFile']")
			//파일 object 안에 이미지를 가져오기
			//inputFile[0] : input type="file"
			//.files : 그 안에 들어있는 이미지
			let files = inputFile[0].files;
			//files : [object FileList]
			console.log("files : " + files);
			
			//가상의 form인 formData Object에 filedata를 추가하자
			for (let i = 0; i < files.length; i++) {
				//파일확장자/크기 체킹(확장자가 exe, sh, zip, alz이냐?)
				if(!checkExtension(files[i].name, files[i].size)) {
					//반복문 종료 및 함수 종료
					return false;
				}
				
				//<form><input type='file' name='uploadFile' /></form>
				formData.append("uploadFile",files[i]);
			}
			
			/*
				<form>
					<input type="file" name="uploadFile" />
					<input type="text" name="userNo" value="3" />
					<input type="text" name="seq" value="5" />
				</form>
			*/
			formData.append("userNo",$("#txtUserNo").val());
			formData.append("seq",$("#txtSeq").val());
			
			console.log("formData : " + formData);
			
			//contentType : 보내는 타입
			//dataType : 받는 데이터 타입
			$.ajax({
			url:"/gallery/updatePost",
			processData:false,
			contentType:false,
			data:formData,
			dataType:"json",
			type:"post",
			success:function(result){
				console.log("result : " + JSON.stringify(result));
				console.log("uploaded");
				let filename = result.filename;
// 				$("#body-content img").attr("src","/resources/upload"+filename);
			}
		});
		//ajax 파일 업로드 구현 끝
		
		//이미지 미리보기 시작
		let sel_file = [];
		$("#uploadFile").on("change",handleImgFileSelect);
		//e : onchange 이벤트 객체
		function handleImgFileSelect(e) {
			//이벤트가 발생 된 타겟 안에 들어있는 이미지 파일들을 가져온다
			let files = e.target.files;
			//이미지가 여러개가 있을 수 있으니 이미지들을 각각 분리해서 배열로 만든다
			let fileArr = Array.prototype.slice.call(files);
			//파일 타입의 배열 반복. f : 배열 안에 들어있는 각각의 이미지 파일 객체
			fileArr.forEach(function(f) {
				//이미지 파일이 아닌 경우 이미지 미리보기 실패 처리
				if (!f.type.match("image.*")) {
					alert("이미지 확장자만 가능합니다.")
					//함수 종료
					return;
				}
				//이미지 객체를 전역 배열타입 변수에 넣자
				sel_file.push(f);
				//이미지 객체를 읽을 자바스크립트의 reader 객체 생성
				let reader = new FileReader();
				//e : reader가 이미지 객체를 읽는 이벤트
				reader.onload = function(e) {
					//e.target : f(이미지객체)
					//e.target.result : reader가 이미지를 다 일긍ㄴ 결과
					let img_html = "<img src=\"" + e.target.result + "\" />";
					//p 사이에 이미지가 렌더링되어 화면에 보인다
					//객체.append : 누적, .html : 새로고침, innerHTML : J/S
					$("#body-content").html(img_html);
				}
				//f : 이미지 파일 객체를 읽은 후 다음 이지미 파일(f)을 위해 초기화 한다
				reader.readAsDataURL(f);
			})
		}
		//이미지 미리보기 끝
	});
	});
</script>
